/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   filler_3.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ftrujill <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/06/13 22:25:35 by ftrujill          #+#    #+#             */
/*   Updated: 2019/06/16 16:01:19 by ftrujill         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "filler.h"
#include "libft/libft.h"
#include <stdio.h>
#include <fcntl.h>

int     prt_error(int fd)
{
    ft_putstr_fd("ERROR\n", fd);
    close(fd);
    return (-1);
}

int    init(char **line, t_map *map, int fd)
{
    int i;
    
    get_next_line(0, line);
    if (ft_strlen(*line) < 11 || !(*(*line + 10) == '1' || *(*line + 10) == '2'))
            return (prt_error(fd));
    map->c = *(*line + 10) == '1' ? 'o' : 'x';
    free(*line);
    get_next_line(0, line);
    if (ft_strlen(*line) < 11)
        return (prt_error(fd));
    map->x = ft_atoi(*line + 8);
    map->y = ft_atoi(*line + 10);
    free(*line);
    if (!(map->map = (char**)malloc(sizeof(char*) * (map->x + 1))) ||
        !(map->piece = (char**)malloc(sizeof(char*) * (map->x + 1))))
        return (prt_error(fd));
    i = 0;
    while (i < map->x)
    {
        if (!(map->map[i] = (char*)ft_memalloc(map->y + 1))
            || !(map->piece[i] = (char*)ft_memalloc(map->y + 1)))
            return (prt_error(fd));
        i++;
    }
    map->map[i] = 0;
    map->piece[i] = 0;
    get_next_line(0, line);
    map->l_size = ft_strlen(*line);
    free(*line);
    return (1);
}

int     pass_lines(int n)
{
    char c;
    int i;

    i = 0;
    while (i < n)
    {
        read(0, &c, 1);
        while (c != '\n')
             read(0, &c, 1);
        i++;
    }
    return (1);
}

int     main(int argc, char **argv)
{

    int     fd;
    int     fd2;
    t_map   *map;
    char    *line;
    char    c;
    int     i;
    char    str[10];

    fd = open("file", O_RDWR | O_CREAT, 0777);
    i = 0;
    pass_lines(1);
    while (read(0, &c, 1))
    {
        write(fd, &c, 1);
        if (c == '\n')
            i++;
        if (i == 9)
        {
            i = 0;
            write(1, "1 1\n", 4);
        }
    }
    ft_putnbr_fd(i, fd);
    write(fd, "Got out\n", 8);
    write(1, "1 1\n", 4);
    if (!(map = (t_map*)malloc(sizeof(t_map))))
        return (0);
    if (!(init(&line, map, fd)))
        return (prt_error(fd));
    ft_putnbr_fd(map->x, fd);
    ft_putnbr_fd(map->y, fd);
    ft_putnbr_fd(map->l_size, fd);
    i = 1;
    while(i)
    {
        i = 0;
        while (i < map->x)
        {
            read(0, map->map[i], map->l_size + 1);
            map->map[i][map->l_size] = 0;
            ft_putstr_fd(map->map[i], fd);
            write(fd, "\n", 1);
            i++;
        }
        get_next_line(0, &line);
        map->p_x = ft_atoi(line + 6);
        map->p_y = ft_atoi(line + 8);
        free(line);
        i = 0;
        while(i < map->p_x)
        {
            read(0, map->piece[i], map->p_y + 1);
            map->piece[i][map->p_y] = 0;
            ft_putstr_fd(map->piece[i], fd);
            write(fd, "\n", 1);
            i++;
        }
        write(1, "1 1\n", 4);
        i = read(0, &c, 1);
    }
    //free(map);
    //free(piece);
    close (fd);
    //close (fd2);
    return (0);
}