/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   filler_2.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ftrujill <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/06/13 22:25:35 by ftrujill          #+#    #+#             */
/*   Updated: 2019/06/16 02:17:53 by ftrujill         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "filler.h"
#include "libft/libft.h"
#include <stdio.h>
#include <fcntl.h>

int     main(int argc, char **argv)
{
    char    **line;
    char    **map;
    char    c;
    int     x;
    int     y;
    int     i;
    int     j;
    int     a;
    int     fd;
    int     p_x;
    int     p_y;

    if (!(line = (char**)malloc(sizeof(char*))))
        return (0);
    get_next_line(0, line);
    c = *(*line + 10) == '1' ? 'o' : 'x';
    free(*line);
    get_next_line(0, line);
    x = ft_atoi(*line + 8);
    y = ft_atoi(*line + 10);
    free(*line);
    if (!(map = (char**)malloc(sizeof(char*) * (3 * x + 11))))
        return (0);
    i = 0;
    while (i <= 3 * x + 11)
    {
        if (!(map[i] = (char*)ft_memalloc(y + 10)))
            return (0);
        i++;
    }
    fd = open("file", O_RDWR | O_CREAT, 0777);
    a = 1;
    while (a)
    {
        i = 0;
        while (a && (a = get_next_line(0, line)) && **line != '0')
            free(*line);
        ft_memcpy(map[i++], *line, ft_strlen(*line) + 1);
        free(*line);        
        while (a && (a = get_next_line(0, line)) && **line != 'P')
        {
            ft_memcpy(map[i++], *line, ft_strlen(*line) + 1);
            free(*line);
        }
        if (a)
        {  
            p_x = ft_atoi(*line + 6);
            p_y = ft_atoi(*line + 8);
            free(*line);
        }
        j = 0;
        while (j < p_x && a && (a = get_next_line(0, line)) && (**line == '.' || **line == '*'))
        {
            ft_memcpy(map[i++], *line, ft_strlen(*line) + 1);
            free(*line);
            j++;
        }
        ft_putstr_fd("Here\n", fd);
        i = 0; 
        while (a && i <= 3 * x + 10)
        {
            ft_putstr_fd(map[i], fd);
            if (ft_strlen(map[i]))
                write(fd, "\n", 1);
            i++;
        }
        if (a)     
            write(1, "1 1\n", 4);
    }
    i = 0;
    while (i <= 3 * x + 10)
        free(map[i++]);
    free(map);
    free(line);
    close(fd);
    return (0);
}

